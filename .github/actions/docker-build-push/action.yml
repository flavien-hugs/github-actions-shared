name: "Build and push Docker image"
description: "Build and push Docker image with proper tagging"

inputs:
  registry:
    description: "Docker registry (ex: ghcr.io/org/repo)"
    required: true
  username:
    description: "Registry username"
    required: true
  password:
    description: "Registry password or token"
    required: true
  version:
    description: "Version to use (from bump-version output or tag)"
    required: true

runs:
  using: "composite"
  steps:
    - name: "Set Git ref info"
      id: ref
      shell: bash
      run: |
        if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            echo "ref_type=tag" >> $GITHUB_OUTPUT
            echo "ref_name=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        else
            echo "ref_type=branch" >> $GITHUB_OUTPUT
            echo "ref_name=${GITHUB_REF#refs/heads/}" >> $GITHUB_OUTPUT
        fi
    
    - name: "Login to Docker registry"
      shell: bash
      run: |
        echo "${{ inputs.password }}" | \
          docker login ${{ inputs.registry }} -u ${{ inputs.username }} --password-stdin

    - name: "Determine image tag(s) and build"
      shell: bash
      run: |
        VERSION="${{ inputs.version }}"
        REF_NAME="${{ steps.ref.outputs.ref_name }}"
        REF_TYPE="${{ steps.ref.outputs.ref_type }}"
        
        if [[ "$REF_TYPE" == "tag" ]]; then
            CLEAN_VERSION=${VERSION#v}
            CLEAN_VERSION=${CLEAN_VERSION/_RC/-rc}
            echo "Detected TAG push â†’ version: $CLEAN_VERSION"
            
            docker build -t ${{ inputs.registry }}:$CLEAN_VERSION .
            docker push ${{ inputs.registry }}:$CLEAN_VERSION
            
            echo "Also tagging 'latest'"
            docker tag ${{ inputs.registry }}:$CLEAN_VERSION ${{ inputs.registry }}:latest
            docker push ${{ inputs.registry }}:latest
            
            echo "image=${{ inputs.registry }}:$CLEAN_VERSION" >> $GITHUB_OUTPUT
            echo "tags=$CLEAN_VERSION,latest" >> $GITHUB_OUTPUT
            exit 0
        fi
        
        CLEAN_VERSION=${VERSION#v}
        echo "Using version: $CLEAN_VERSION"
        echo "Branch name: $REF_NAME"
        
        if [[ "$REF_NAME" == "main" || "$REF_NAME" == "master" ]]; then
            DOCKER_TAGS=("latest")
        elif [[ "$REF_NAME" == "preprod" ]]; then
            DOCKER_TAGS=("preprod")
        elif [[ "$REF_NAME" == "develop" ]]; then
            DOCKER_TAGS=("dev")
        else
            echo "No valid tag found for branch $REF_NAME, exiting..."
            exit 1
        fi
        
        echo "Building Docker image with tags: ${DOCKER_TAGS[@]}"
        docker build -t ${{ inputs.registry }}:${DOCKER_TAGS[0]} .
        
        for tag in "${DOCKER_TAGS[@]:1}"; do
            docker tag ${{ inputs.registry }}:${DOCKER_TAGS[0]} ${{ inputs.registry }}:$tag
        done
        
        for tag in "${DOCKER_TAGS[@]}"; do
            docker push ${{ inputs.registry }}:$tag
        done
        
        echo "image=${{ inputs.registry }}:${DOCKER_TAGS[0]}" >> $GITHUB_OUTPUT
        echo "tags=${DOCKER_TAGS[*]}" >> $GITHUB_OUTPUT
        echo "Build and push completed successfully"
