name: "Bump version"
description: "Run semantic-release to bump version and expose new version"

inputs:
  token:
    description: "Github token to push tags"
    required: true

outputs:
  version:
    description: "The new version after bump"
    value: ${{ steps.extract-version.outputs.version }}

runs:
  using: "composite"
  steps:
    - name: "Checkout repository"
      uses: actions/checkout@v4
      with:
        ref: ${{ github.ref }}
        fetch-depth: 0
        persist-credentials: 'true'
    
    - name: "Checkout target branch"
      shell: bash
      run: |
        TARGET_BRANCH="${GITHUB_BASE_REF:-${GITHUB_REF#refs/heads/}}"
        echo "Checking out branch: $TARGET_BRANCH"
        git fetch origin $TARGET_BRANCH
        git checkout $TARGET_BRANCH
    
    - name: "Install dependencies"
      shell: bash
      run: |
        poetry install --only main --no-interaction --no-ansi
        poetry run pip install python-semantic-release

    - name: "Bump version & generate changelog"
      id: bump
      shell: bash
      if: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' }}
      env:
        GITHUB_TOKEN: ${{ inputs.token }}
      run: |
        poetry run semantic-release version --changelog
    
    - name: "Extract new version"
      id: extract-version
      shell: bash
      env:
          GITHUB_TOKEN: ${{ inputs.token }}
      run: |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            VERSION="${GITHUB_REF#refs/tags/}"
          elif [[ "${GITHUB_REF}" == "refs/heads/main" || "${GITHUB_REF}" == "refs/heads/develop" ]]; then
            VERSION=$(poetry run semantic-release version --print)
          else
            VERSION=$(git rev-parse --short HEAD)
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
